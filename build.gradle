buildscript {
    ext {
        kotlin_version = "1.7.10"
    }
}

plugins {
    id 'idea'
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version "${kotlin_version}"
    id 'maven-publish'
    id 'org.jetbrains.dokka' version "${kotlin_version}"
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'top.wcpe'
version = '1.2.0'

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching(['plugin.yml']) {
        expand props
    }
    from('src/main/java') {
        include '**/*.xml'
    }
    from('src/main/kotlin') {
        include '**/*.xml'
    }
}

repositories {
    mavenLocal()
    maven {
        url "https://maven.wcpe.top/repository/maven-public/"
    }
    mavenCentral()
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.12.2-R0.1-SNAPSHOT'
    compileOnly 'eos.moe.dragoncore:DragonCore:2.4.7'

    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains:annotations:23.0.0"

    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += "-Xjvm-default=all-compatibility"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += "-Xjvm-default=all-compatibility"
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

publishing {
    publications {
        mavenJava(MavenPublication) {

            groupId project.group
            artifactId project.name
            version project.version
            from components.java
            artifact sourcesJar
        }
    }
    repositories {
        maven {
            credentials {
                allowInsecureProtocol = true
                username = project.findProperty("username").toString()
                password = project.findProperty("password").toString()
            }
            def releasesRepoUrl = "https://maven.wcpe.top/repository/maven-releases/"
            def snapshotsRepoUrl = "https://maven.wcpe.top/repository/maven-snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}
